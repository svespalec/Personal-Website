---
import { Icon } from 'astro-icon/components';
import type { SkillSection } from '../types';
import { skills } from '../data/skills';
---

<div class="container mx-auto px-4 mt-24 mb-16">
  <div class="tab-switcher inline-flex p-1 bg-white/[0.02] backdrop-blur-xl border border-white/[0.05] rounded-xl">
    <button id="skills-tab" class="tab-button active-tab">
      <div class="tab-highlight"></div>
      <Icon name="mdi:code-braces" class="w-5 h-5 mr-2" />
      <span class="relative z-10">Skills</span>
    </button>
    <button id="projects-tab" class="tab-button">
      <div class="tab-highlight"></div>
      <Icon name="mdi:rocket-launch" class="w-5 h-5 mr-2" />
      <span class="relative z-10">Projects</span>
    </button>
  </div>
</div>

<section id="skills-section" class="py-16 relative">
  <div class="absolute inset-0 grid grid-cols-[repeat(auto-fit,minmax(5rem,1fr))] gap-20 opacity-[0.15] blur-[1px] -z-10">
    <div class="bg-gradient-to-b from-purple-500/50 to-transparent h-60 rounded-lg"></div>
  </div>
  
  <div class="container mx-auto px-4">
    <div class="max-w-4xl">
      <h2 class="text-4xl font-bold mb-2 text-white/90 tracking-tight">
        <span class="bg-clip-text text-transparent bg-gradient-to-r from-purple-400 via-purple-500 to-purple-600">Skills</span>
      </h2>
      <p class="text-white/60 mb-12 text-lg">Technical expertise and core competencies</p>
    
      <div class="grid grid-cols-1 gap-8">
        {skills.map((skill, index) => (
          <div class="group bg-gradient-to-b from-white/[0.03] to-transparent border border-white/[0.08] rounded-xl p-7
                     hover:border-purple-500/30 backdrop-blur-sm
                     transition-all duration-500 ease-out transform hover:scale-[1.02]"
               style={`animation-delay: ${index * 100}ms`}>
            <div class="flex items-start gap-4 mb-4">
              <div class="bg-purple-500/10 p-3 rounded-xl border border-purple-500/20 group-hover:border-purple-500/40 
                          transition-all duration-500 group-hover:shadow-[0_0_1.5rem_0_rgba(168,85,247,0.1)]">
                <Icon name={skill.icon} class="w-6 h-6 text-purple-400" />
              </div>
              <div>
                <h3 class="text-xl font-medium text-white/90 group-hover:text-white transition-colors duration-300">{skill.title}</h3>
                <p class="text-[0.95rem] text-white/60 group-hover:text-white/70 transition-colors duration-300 mt-1">{skill.description}</p>
              </div>
            </div>
            
            <div class="flex flex-wrap gap-2 pl-[4rem]">
              {skill.items.map(item => (
                <div class="group/item">
                  <div class="relative">
                    <span class="px-4 py-2 text-[0.9rem] rounded-lg bg-purple-500/[0.08] text-purple-300/90
                               border border-purple-500/20 hover:border-purple-500/40 
                               transition-all duration-300 cursor-default inline-block
                               hover:bg-purple-500/[0.15] hover:shadow-[0_0_1rem_0_rgba(168,85,247,0.1)]">
                      {item.name}
                    </span>
                    <div class="absolute left-1/2 -translate-x-1/2 bottom-full mb-2 w-52 p-3 bg-[#1A1A1C]/95 
                                rounded-lg border border-purple-500/20 text-sm text-white/80
                                opacity-0 group-hover/item:opacity-100 pointer-events-none backdrop-blur-xl
                                transition-all duration-300 z-10 shadow-xl">
                      {item.description}
                      <div class="absolute bottom-0 left-1/2 -translate-x-1/2 translate-y-1/2 rotate-45 
                                 w-2.5 h-2.5 bg-[#1A1A1C]/95 border-r border-b border-purple-500/20"></div>
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </div>
        ))}
      </div>
    </div>
  </div>
</section>

<style>
  .group {
    opacity: 0;
    animation: fadeInUp 0.8s cubic-bezier(0.16, 1, 0.3, 1) forwards;
  }

  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .tab-switcher {
    position: relative;
    isolation: isolate;
  }

  .tab-button {
    @apply relative flex items-center px-6 py-3 text-[0.95rem] font-medium transition-all duration-500 rounded-lg;
    color: rgba(255, 255, 255, 0.6);
  }

  .tab-highlight {
    @apply absolute inset-0 rounded-lg opacity-0 transition-opacity duration-500;
    background: linear-gradient(
      135deg,
      rgba(168, 85, 247, 0.2),
      rgba(168, 85, 247, 0.1)
    );
    z-index: 0;
  }

  .tab-button:hover {
    color: rgba(255, 255, 255, 0.9);
  }

  .tab-button:hover .tab-highlight {
    opacity: 0.5;
  }

  .active-tab {
    color: rgba(255, 255, 255, 1);
  }

  .active-tab .tab-highlight {
    opacity: 1;
  }

  .active-tab::after {
    content: '';
    position: absolute;
    inset: -1px;
    border-radius: 8px;
    padding: 1px;
    background: linear-gradient(135deg, rgba(168, 85, 247, 0.5), rgba(168, 85, 247, 0.2));
    mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
  }
</style>

<script>
  function initializeTabSwitching() {
    const skillsTab = document.getElementById('skills-tab');
    const projectsTab = document.getElementById('projects-tab');
    const skillsSection = document.getElementById('skills-section');
    const projectsSection = document.getElementById('projects-section');

    if (skillsTab && projectsTab && skillsSection && projectsSection) {
      skillsTab.addEventListener('click', () => {
        skillsTab.classList.add('active-tab');
        projectsTab.classList.remove('active-tab');
        skillsSection.classList.remove('hidden');
        projectsSection.classList.add('hidden');
      });

      projectsTab.addEventListener('click', () => {
        projectsTab.classList.add('active-tab');
        skillsTab.classList.remove('active-tab');
        projectsSection.classList.remove('hidden');
        skillsSection.classList.add('hidden');
      });
    }
  }

  // Initialize on page load
  document.addEventListener('DOMContentLoaded', initializeTabSwitching);
  // Also initialize when Astro handles client-side navigation
  document.addEventListener('astro:page-load', initializeTabSwitching);
</script>